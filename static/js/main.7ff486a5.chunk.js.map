{"version":3,"sources":["component/Products/Product-top-bar.js","component/Products/Products.js","redux/actions.js","redux/actionCreators.js","containers/Home.js","containers/Team.js","component/Navbar.js","Api/Api.js","redux/reducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","react_default","a","createElement","onSubmit","handleSubmit","type","value","name","className","placeholder","CategorySelection","getCategories","products","map","item","category","Array","from","Set","htmlFor","id","onChange","handleChange","index","key","toLowerCase","SortProducts","handleSorting","ProductsTopBar","Product_top_bar_Search","this","handleSearchSubmit","Product_top_bar_CategorySelection","handleCategoryFilter","Product_top_bar_SortProducts","React","Component","ProductCard","src","image","alt","price","href","Products","productsToShow","_this","search","undefined","slice","perPage","filter","element","elementName","elementCategory","concat","includes","length","arguments","sorting","loadProductsBasedOnQuery","sort","b","sortProducts","console","log","product","Products_ProductCard","SET_SEARCH_TERM","SET_SORTING_TYPE","setSearchTern","searchTerm","payload","connect","state","sortingType","dispatch","e","preventDefault","searchQuery","target","filterCategory","setSortingType","Product_top_bar","component_Products_Products","Team","faker","fake","Navbar","Link","to","schema","DEFAULT_STATE","ammount","Object","keys","reduce","entity","generator","sortingInitialState","rootReducer","action","assign","setSearchTerm","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","component_Navbar","Switch","Route","exact","path","component","Home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ff486a5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <input type=\"text\" value={props.value} name={'search'} className={'form-control'} placeholder={'search'}/>\n        </form>\n    )\n}\n\nconst CategorySelection = (props) => {\n    // get all the categories of the products\n    let getCategories = props.products.map((item)=> {\n        return item.category\n    });\n\n    // remove all the duplicate category occurrences and return a unique array\n    getCategories = Array.from(new Set(getCategories));\n\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlSelect1\" className={'label-full-width'}>\n                <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={props.handleChange}>\n                    {\n                        getCategories.map((category, index)=> {\n                            return <option key={index} value={category.toLowerCase()}>{category}</option>\n                        })\n                    }\n                </select>\n            </label>\n        </div>\n    )\n}\n\nconst SortProducts = (props)=>{\n    return(\n        <div className=\"form-group\">\n            <label htmlFor=\"sorting\" className={'label-full-width'}>\n                <select className=\"form-control\" id=\"sorting\" onChange={props.handleSorting}>\n                    <option value=\"\">Select</option>\n                    <option value=\"price_ascending\">High-Low</option>\n                    <option value=\"price_descending\">Low-High</option>\n                </select>\n            </label>\n        </div>\n    )\n}\n\nclass ProductsTopBar extends React.Component {\n    render() {\n        return (\n            <div className={'col-md-12'}>\n                <div className={'row product-bar'}>\n                    <div className={'col-md-3'}>\n                        <h3>Products</h3>\n                    </div>\n                    <div className={'col-md-3'}>\n                        <Search handleSubmit={this.props.handleSearchSubmit}/>\n                    </div>\n                    <div className={'col-md-3'}>\n                        <CategorySelection products={this.props.products} handleChange={this.props.handleCategoryFilter}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <SortProducts handleSorting={this.props.handleSorting}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default ProductsTopBar;","import React from 'react';\n\n\nconst ProductCard = (props) => {\n    return (\n        <div className=\"card cardProduct\">\n            <img className=\"card-img-top\" src={props.image} alt={'image'}/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.name}</h5>\n                <p className=\"card-text\"><span>Price:</span>{props.price}</p>\n                <p className={'card-text'}><span>Category:</span>{props.category}</p>\n                <a href=\"#\" className=\"btn btn-primary\">View Details</a>\n            </div>\n        </div>\n    )\n};\n\nclass Products extends React.Component {\n    /*\n    * loadProductsBasedOnQuery used to load products from store based on\n    * search query and category selection\n    * */\n    loadProductsBasedOnQuery() {\n        let productsToShow;\n\n        // load products default\n        if (this.props.search === '' || this.props.search == undefined) {\n            productsToShow = this.props.products.slice(0, this.props.perPage);\n        } else {\n            // check and return the product that's name or category contains the search query\n            productsToShow = this.props.products.filter((element) => {\n                let elementName = element.name.toLowerCase();\n                let elementCategory = element.category.toLowerCase();\n                return `${elementName}${elementCategory}`.includes(this.props.search)\n            });\n\n            if (productsToShow.length > (this.props.perPage)) {\n                productsToShow = productsToShow.slice(0, this.props.perPage)\n            }\n        }\n\n        return productsToShow;\n    }\n\n    // sortProducts based on sorting type\n    sortProducts(sortingType = this.props.sorting) {\n        if (sortingType === 'price_ascending') {\n            return this.loadProductsBasedOnQuery().sort((a, b) => {\n                return b.price - a.price;\n            });\n        } else {\n            return this.loadProductsBasedOnQuery().sort((a, b) => {\n                return a.price - b.price;\n            });\n        }\n    }\n\n    render() {\n        let products;\n\n\n        if (this.props.sorting === '' || this.props.sorting === undefined) {\n            products = this.loadProductsBasedOnQuery();\n        } else {\n            products = this.sortProducts();\n            console.log(products);\n        }\n\n\n        return (\n            <div className={'col-md-12 product_area'}>\n                <div className={'row'}>\n                    {\n                        products.map((product, index) => {\n                            return (\n                                <div className={'col-md-4 '}>\n                                    <ProductCard\n                                        key={index}\n                                        name={product.name}\n                                        price={product.price}\n                                        category={product.category}\n                                        image={product.image}\n                                    />\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Products;\n\n","const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\nconst SET_SORTING_TYPE = 'SET_SORTING_TYPE';\n\nexport {SET_SEARCH_TERM, SET_SORTING_TYPE};","import {SET_SEARCH_TERM} from \"./actions\";\nimport {SET_SORTING_TYPE} from \"./actions\";\n\nfunction setSearchTern(searchTerm) {\n    return {type: SET_SEARCH_TERM, payload: searchTerm}\n}\n\nfunction setSortingType(sortingType) {\n    return {type: SET_SORTING_TYPE, payload: sortingType}\n}\n\nexport {setSearchTern, setSortingType}\n","import React from \"react\";\nimport ProductsTopBar from '../component/Products/Product-top-bar';\nimport Products from '../component/Products/Products'\nimport connect from \"react-redux/es/connect/connect\";\nimport {setSearchTern, setSortingType} from \"../redux/actionCreators\";\n\nconst Home = (props) => {\n    return (\n        <div className={'container'}>\n            <div className={'row'}>\n                <ProductsTopBar\n                    handleSearchSubmit={props.handleSearchSubmit}\n                    handleCategoryFilter={props.handleCategoryFilter}\n                    handleSorting={props.handleSorting}\n                    products={props.products}\n                />\n                <Products\n                    products={props.products}\n                    perPage={6}\n                    search={props.search}\n                    sorting={props.sorting}\n                />\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n        products: state.products,\n        search: state.searchTerm,\n        sorting: state.sortingType\n    });\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSearchSubmit(e) {\n            e.preventDefault();\n            let searchQuery= e.target.search.value.toLowerCase();\n            dispatch(setSearchTern(searchQuery))\n        },\n\n        handleCategoryFilter(e) {\n            let filterCategory = e.target.value;\n            dispatch(setSearchTern(filterCategory))\n        },\n\n        handleSorting(e){\n            let sortingType= e.target.value;\n            dispatch(setSortingType(sortingType));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport faker from 'faker';\n\n\nconst Team = (props)=>{\n    return(\n        <div className={'container teamArea'}>\n            <div className=\"row\">\n                <div className=\"col text-center team-area-title\">\n                    <h2>Our Team</h2>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"card cardProduct\">\n                        <img className=\"card-img-top\" src={faker.fake('{{image.people}}')} alt={'image'}/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{faker.fake('{{name.firstName}} {{name.lastName}}')}</h5>\n                            <p className=\"card-text\">{faker.fake('{{name.jobTitle}}')}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card cardProduct\">\n                        <img className=\"card-img-top\" src={faker.fake('{{image.people}}')} alt={'image'}/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{faker.fake('{{name.firstName}} {{name.lastName}}')}</h5>\n                            <p className=\"card-text\">{faker.fake('{{name.jobTitle}}')}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card cardProduct\">\n                        <img className=\"card-img-top\" src={faker.fake('{{image.people}}')} alt={'image'}/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{faker.fake('{{name.firstName}} {{name.lastName}}')}</h5>\n                            <p className=\"card-text\">{faker.fake('{{name.jobTitle}}')}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Team;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <div className={\"container\"}>\n            <div className={\"row\"}>\n                <div className={\"col-md-12\"}>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item active\">\n                                    <Link to={\"/\"}>Home</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to={\"/team\"}>Team</Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Navbar;\n","/* mimicking a fake api call with faker*/\nimport faker from 'faker';\n\n\n// your schema\nconst schema = {\n    id: '{{random.number}}',\n    name: '{{commerce.productName}}',\n    price: '{{commerce.price}}',\n    category: '{{commerce.product}}',\n    image: '{{image.food}}'\n}\n\n\n// random generator\nconst generator = (ammount=12) => {\n    return Array.from({length: ammount})\n        .map(() => Object.keys(schema)\n            .reduce((entity, key) => {\n                entity[key] = faker.fake(schema[key]);\n                return entity\n            }, {}))\n}\n\nexport default generator;","import {\n    SET_SEARCH_TERM,\n    SET_SORTING_TYPE\n} from \"./actions\";\n\nimport generator from '../Api/Api'\n\n/* initial states of the application */\nconst DEFAULT_STATE = {\n    searchTerm: \"\",\n    products: generator(20)\n};\nlet sortingInitialState = {\n    sortingType: ''\n};\n\n\n/* reducer for handling search */\nconst setSearchTerm = (state, action) => {\n    return Object.assign({}, state, {searchTerm: action.payload})\n};\n\n/* reducer for hydrating and handling products section*/\nconst setSortingType = (state = sortingInitialState, action) => {\n    return Object.assign({}, state,{sortingType: action.payload})\n};\n\n\nconst rootReducer = (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case SET_SEARCH_TERM:\n            return setSearchTerm(state, action);\n        case SET_SORTING_TYPE:\n            return setSortingType(state, action);\n        default:\n            return DEFAULT_STATE;\n    }\n}\n\nexport default rootReducer;","import {createStore} from 'redux';\nimport rootReducer from './reducer'\n\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from './containers/Home';\nimport Team from './containers/Team';\nimport Navbar from \"./component/Navbar\"\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <header className=\"App-header\">\n                            <Navbar/>\n                        </header>\n\n                        <Switch>\n                            <Route exact path={'/'} component={Home}/>\n                            <Route exact path={'/team'} component={Team}/>\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}